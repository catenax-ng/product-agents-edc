---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "edc-dataplane.fullname" . }}-configmap
  namespace: {{ .Release.Namespace | default "default" | quote }}
  labels:
    {{- include "edc-dataplane.labels" . | nindent 4 }}
data:
  configuration.properties: |-
    web.http.default.port={{ .Values.edc.endpoints.default.port }}
    web.http.default.path={{ .Values.edc.endpoints.default.path }}
    web.http.public.port={{ .Values.edc.endpoints.public.port }}
    web.http.public.path={{ .Values.edc.endpoints.public.path }}
    web.http.control.port={{ .Values.edc.endpoints.control.port }}
    web.http.control.path={{ .Values.edc.endpoints.control.path }}
    web.http.callback.port={{ .Values.edc.endpoints.callback.port }}
    web.http.callback.path={{ .Values.edc.endpoints.callback.path }}
    {{- if .Values.edc.endpoints.default.auth.value }}
    edc.api.auth.key={{ .Values.edc.endpoints.default.auth.value }}
    {{- end }}    
    {{- if .Values.edc.endpoints.control.auth.value }}
    edc.api.control.auth.apikey.key={{ .Values.edc.endpoints.control.auth.key }}
    {{- end }} 
    {{- if .Values.edc.endpoints.control.auth.key }}
    edc.api.control.auth.apikey.value={{ .Values.edc.endpoints.control.auth.value }}
    {{- end }} 
    {{- if .Values.agent.controlPlaneDataUrl }}
    cx.agent.controlplane.url={{ .Values.agent.controlPlaneDataUrl }}
    {{- end }} 
    {{- if .Values.agent.defaultGraph.content }}
    cx.agent.asset.file={{ .Values.agent.defaultGraph.content }}
    {{- end }} 
    {{- if .Values.agent.federation }}
    {{- if .Values.agent.federation.synchronization }}
    cx.agent.dataspace.synchronization={{ .Values.agent.federation.synchronization }}
    {{- end }} 
    {{- if .Values.agent.federation.connectors }}
    cx.agent.dataspace.remotes={{ join "," .Values.agent.federation.connectors }}
    {{- end }} 
    {{- end }} 
    {{- if .Values.token.validationEndpoint }}
    edc.dataplane.token.validation.endpoint={{ .Values.token.validationEndpoint }}
    {{- end }} 
    {{- if .Values.vault }}
    {{- if .Values.vault.url }}
    edc.vault={{ .Values.vault.url }}
    {{- end }}   
    {{- if .Values.vault.clientid }}
    edc.vault.clientid={{ .Values.vault.clientid }}
    {{- end }}   
    {{- if .Values.vault.name }}
    edc.vault.name={{ .Values.vault.name }}
    {{- end }}   
    {{- if .Values.vault.clientsecret }}
    edc.vault.clientsecret={{ .Values.vault.clientsecret }}
    {{- end }}   
    {{- if .Values.vault.tenantid }}
    edc.vault.tenantid={{ .Values.vault.tenantid }}
    {{- end }}   
    {{- if .Values.vault.certificate }}
    edc.vault.certificate={{ .Values.vault.certificate }}
    {{- end }}   
    {{- if .Values.vault.hashicorp }}
    {{- if .Values.vault.hashicorp.url }}
    edc.vault.hashicorp.url={{ .Values.vault.hashicorp.url }}
    {{- end }}   
    {{- if .Values.vault.hashicorp.token }}
    edc.vault.hashicorp.token={{ .Values.vault.hashicorp.token }}
    {{- end }}   
    {{- if .Values.vault.hashicorp.timeout }}
    edc.vault.hashicorp.timeout.seconds={{ .Values.vault.hashicorp.timeout.seconds }}
    {{- end }}   
    {{- if .Values.vault.hashicorp.path }}
    edc.vault.hashicorp.api.secret.path={{ .Values.vault.hashicorp.path }}
    {{- end }}   
    {{- if .Values.vault.hashicorp.checkHealth }}
    edc.vault.hashicorp.health.check.enabled={{ .Values.vault.hashicorp.checkHealth }}
    {{- end }}   
    {{- if .Values.vault.hashicorp.checkStandby }}
    edc.vault.hashicorp.health.check.standby.ok={{ .Values.vault.hashicorp.checkStandby }}
    {{- end }}   
    {{- end }}   
    {{- end }}   
    {{- .Values.configuration.properties | nindent 4 }}
    
  opentelemetry.properties: |-
    {{- .Values.opentelemetry.properties | nindent 4 }}

  logging.properties: |-
    {{- .Values.logging.properties | nindent 4 }}

  {{ $scope := . }}
  {{- range $asset, $content := .Values.assets }}
  {{- $asset  }}: |- 
  {{- $content | nindent 4 }}
  {{- end }}

